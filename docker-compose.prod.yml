# Docker Compose for production environment
# Usage: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up

services:
  video:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
      args:
        - BUILDKIT_INLINE_CACHE=1
    environment:
      - LOG_LEVEL=WARNING
      - DEBUG=false
      - WORKERS=2
      - MAX_REQUESTS=1000
      - MAX_REQUESTS_JITTER=50
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: "2.0"
        reservations:
          memory: 1G
          cpus: "0.5"
      restart_policy:
        condition: unless-stopped
        delay: 10s
        max_attempts: 3
        window: 120s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    command: >
      uvicorn app.main:app 
      --host 0.0.0.0 
      --port 8000 
      --workers 2
      --worker-class uvicorn.workers.UvicornWorker
      --max-requests 1000
      --max-requests-jitter 50
      --timeout-keep-alive 10
      --access-log
      --log-level warning

  # Production nginx reverse proxy
  nginx:
    image: nginx:1.25-alpine
    container_name: cont_nginx_prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_cache:/var/cache/nginx
    networks:
      - video_network
    depends_on:
      - video
    environment:
      - DOMAIN=${DOMAIN:-your-domain.com}
      - SSL_ENABLED=${SSL_ENABLED:-false}
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: "0.2"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Production monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: cont_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - video_network
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--storage.tsdb.retention.time=200h"
      - "--web.enable-lifecycle"
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: "0.3"

volumes:
  nginx_cache:
    driver: local
  prometheus_data:
    driver: local
