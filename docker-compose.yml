services:
  video:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - BUILDKIT_INLINE_CACHE=1
    container_name: cont_video
    ports:
      - "8000:8000"
    networks:
      - video_network
    restart: unless-stopped
    environment:
      - TZ=Asia/Ho_Chi_Minh
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=INFO
      - MOVIEPY_TEMP_DIR=/app/tmp
      - IMAGEIO_FFMPEG_EXE=/usr/bin/ffmpeg
      - MAX_WORKERS=1
      - MEMORY_LIMIT=2G
    volumes:
      - video_temp:/app/tmp:rw
      - video_logs:/app/logs:rw
      - video_cache:/app/cache:rw
    tmpfs:
      - /tmp:noexec,nosuid,size=1g
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: "1.0"
        reservations:
          memory: 512M
          cpus: "0.25"
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://localhost:8000/health",
        ]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 60s

  ngrok:
    image: ngrok/ngrok:latest
    container_name: cont_ngrok
    command: http video:8000 --url=${NGROK_URL}
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
      - NGROK_REGION=ap
      - NGROK_CONFIG_PATH=/etc/ngrok.yml
    restart: unless-stopped
    networks:
      - video_network
    depends_on:
      video:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: "0.1"

volumes:
  video_temp:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/data/temp
  video_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/data/logs
  video_cache:
    driver: local

networks:
  video_network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: br-video
    ipam:
      config:
        - subnet: 172.20.0.0/16
